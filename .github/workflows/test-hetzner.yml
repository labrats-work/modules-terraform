name: 'Test modules/hetzner'

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/test-hetzner.yml'
      - 'modules/hetzner/**'
      - 'tests/hetzner/**'

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/labrats-work/ops-images/omnibus:latest
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

    defaults:
      run:
        shell: sh

    strategy:
      fail-fast: false
      matrix: 
        image: [ debian-11, fedora-37, rocky-9, ubuntu-22.04 ]
        test: [ hetzner/node, hetzner/node_group ]

    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ env.BRANCH_NAME }}
    - 
      name: Create keypair for test.
      run: |
        ssh-keygen -t ed25519 -N '' -f id_ed25519
        xargs -a id_ed25519 -I{} -d'\n' echo ::add-mask::{}
        xargs -a id_ed25519.pub -I{} -d'\n' echo ::add-mask::{}
    - 
      name: Load keypair for test.
      run: |
        echo "Loading KEYFILE \"id_ed25519\" into GITHUB_ENV."
        echo 'KEYFILE<<EOF' >> $GITHUB_ENV
        cat id_ed25519 >> $GITHUB_ENV
        echo EOF >> $GITHUB_ENV

        echo "Loading PUBKEYFILE \"id_ed25519.pub\" into GITHUB_ENV."
        echo 'PUBKEYFILE<<EOF' >> $GITHUB_ENV
        cat id_ed25519.pub >> $GITHUB_ENV
        echo EOF >> $GITHUB_ENV
    - 
      name: Create vars file for test.
      run: |
        cd tests/${{ matrix.test }}
        echo "hcloud_token = \"${{ secrets.HETZNER_TOKEN }}\"" >> default.tfvars
        echo "github_public_key = \"${{ env.PUBKEYFILE }}\"" >> default.tfvars
    - 
      name: Update config files for test.
      run: |
        cd tests/${{ matrix.test }}
        sed -i 's|hetzner.node|${{ github.sha }}-${{ matrix.image }}-node|' files/config.json
        sed -i 's|hetzner.network|${{ github.sha }}-${{ matrix.image }}-net|' files/config.json
        sed -i 's|hetzner.image|${{ matrix.image }}|' files/config.json
    - 
      name: Terraform Init
      run: terraform -chdir=tests/${{ matrix.test }} init -backend-config=config.remote.tfbackend
      env:
        TF_CLI_CONFIG_FILE: default.tfrc
    - 
      name: Terraform Plan
      run: terraform -chdir=tests/${{ matrix.test }} plan --var-file=default.tfvars -out=tfplan -input=false
      env:
        TF_CLI_CONFIG_FILE: default.tfrc
    - 
      name: Terraform Apply
      run: |      
        eval `ssh-agent`
        echo "${KEYFILE}" | ssh-add -
        terraform -chdir=tests/${{ matrix.test }} apply tfplan
    - 
      name: Terraform Plan
      run: terraform -chdir=tests/${{ matrix.test }} destroy --var-file=default.tfvars -auto-approve -input=false
      env:
        TF_CLI_CONFIG_FILE: default.tfrc